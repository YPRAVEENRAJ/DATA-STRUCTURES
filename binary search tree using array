#include<stdio.h>
#include<stdlib.h>
struct tree{
	struct tree*lchild;
	char data[10];
	struct tree*rchild;
};
typedef struct tree node;
int ctr;
node*tree[100];
node*getnode(){
	node*temp;
	temp;
	temp=(node*)malloc(sizeof(node));
	printf("\nenter data :");
	scanf("%s",temp->data);
	temp->lchild=NULL;
	return temp;
}
void create_fbinarytree(){
	int j,i=0;
	printf("\nhow many nodes do you want: ");
	scanf("%d",&ctr);
	tree[0]=getnode();
	j=ctr;
	j--;
	do{
		if(j>0){
			tree[i*2+1]=getnode();
			tree[i]->lchild=tree[i*2+1];
			j--;
		}
		if(j>0){
			tree[i*2+2]=getnode();
			j--;
			tree[i]->rchild=tree[i*2+2];
		}
		i++;
	}
	while(j>0);
}
void inorder(node*root){
	if(root!=NULL){
		inorder(root->lchild);
		printf("%3s",root->data);
		inorder(root->rchild);
	}
}
void preorder(node*root){
	if(root!=NULL){
		printf("%3s",root->data);
		preorder(root->lchild);
		preorder(root->rchild);
	}
}
void postorder(node*root){
	if(root!=NULL){
		postorder(root->lchild);
		postorder(root->rchild);
		printf("%3s",root->data);
		
	}
}
void main(){
	int i;
	create_fbinarytree();
	printf("\ninorder traversal:");
	inorder(tree[0]);
	printf("\npreorder traversal:");
	preorder(tree[0]);
	printf("\npostorder traversal:");
	postorder(tree[0]);
}
